server.port=7000
client.url=http://localhost:4200
#
#oauth.google.clientId=${GOOGLE_CLIENT_ID}
#oauth.google.clientSecret=${GOOGLE_CLIENT_SECRET}

server.ssl.enable=false
#server.ssl.key-store=classpath:ssl/server-cert.pfx
#server.ssl.key-store-password=${SSL_PASSWORD}
#server.ssl.key-store-type=PKCS12
#server.ssl.key-store-alias=1
#server.ssl.key-store-provider=SunJSSE

jwt.secret=${JWT_SECRET}
jwt.lifetime=3000m

spring.datasource.url=${POSTGRESQL_URL}
spring.datasource.username=${POSTGRESQL_USERNAME}
spring.datasource.password=${POSTGRESQL_PASSWORD}
spring.sql.init.mode=always

spring.jpa.show-sql=true
spring.datasource.driverClassName=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.generate-ddl=true
spring.mvc.validation.enabled=true

logging.level.com.group.security=DEBUG
logging.file.name=example.log
logging.level.root=INFO

#
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=openid,email,profile
oauth.redirect=/api/tasks
#spring.jpa.hibernate.ddl-auto=create